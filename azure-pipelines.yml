---
trigger:
  - master

variables:
  NPM_CONFIG_REGISTRY: https://pkgs.dev.azure.com/agos-labs/_packaging/agos-labs/npm/registry/
  NPM_CONFIG_USERCONFIG: $(Pipeline.Workspace)/.npmrc
  PIP_INDEX_URL: https://pkgs.dev.azure.com/agos-labs/_packaging/agos-labs/pypi/simple/
  PRE_COMMIT_HOME: $(Pipeline.Workspace)/pre-commit-cache

stages:
  - stage: QualityAssurance
    displayName: Quality Assurance
    pool:
      vmImage: "ubuntu-latest"
    jobs:
      - job: Validate
        displayName: Validate toolchain conformity
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.7"
              addToPath: true
          - script:
              echo "##vso[task.setvariable variable=PYTHON_FULL_VERSION]$(python
              --version --version)"
            displayName: Define Python version

          - task: PipAuthenticate@1
            inputs:
              artifactFeeds: agos-labs
            displayName: Authenticate pip for Azure Artifacts

          - script: pip install -r build-requirements.txt
            displayName: Install build requirements

          - task: Cache@2
            inputs:
              key:
                pre-commit | "$(Agent.OS)" | .pre-commit-config.yaml |
                "$(PYTHON_FULL_VERSION)"
              restoreKeys: |
                pre-commit | "$(Agent.OS)" | .pre-commit-config.yaml
                pre-commit | "$(Agent.OS)"
                pre-commit
              path: $(PRE_COMMIT_HOME)
            displayName: Cache pre-commit hooks
          - script: pre-commit run --all-files
            displayName: Run pre-commit hooks

      - job: ValidateCommitMessages
        displayName: Validate commit messages
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "12.x"
          - script:
              echo "##vso[task.setvariable variable=NODE_VERSION]$(node
              --version)"
            displayName: Define Node.js version

          - script: |
              echo "registry=$(NPM_CONFIG_REGISTRY)" > $(NPM_CONFIG_USERCONFIG)
              echo "always-auth=true" >> $(NPM_CONFIG_USERCONFIG)
            displayName: Configure npm for Azure Artifacts
          - task: npmAuthenticate@0
            inputs:
              workingFile: $(NPM_CONFIG_USERCONFIG)
            displayName: Authenticate npm for Azure Artifacts

          - task: Cache@2
            inputs:
              key: yarn | "$(Agent.OS)" | yarn.lock | "$(NODE_VERSION)"
              restoreKeys: |
                yarn | "$(Agent.OS)" | yarn.lock
                yarn | "$(Agent.OS)"
              path: node_modules
            displayName: Cache JavaScript dependencies
          - script: yarn install --frozen-lockfile --production=false
            displayName: Install JavaScript requirements

          - script: npx --no-install commitlint --from=origin/master
            displayName: Lint commit messages since master

  - stage: Release
    pool:
      vmImage: "ubuntu-latest"
    condition:
      and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    jobs:
      - job: Version
        displayName: Commit new version
        variables:
          GIT_EMAIL: "release-manager@agos-tech.com"
          GIT_USERNAME: AgOS release
        steps:
          - checkout: self
            clean: true
            persistCredentials: true

          - script: |
              echo "##vso[task.setvariable variable=GIT_AUTHOR_NAME]$(GIT_USERNAME)"
              echo "##vso[task.setvariable variable=GIT_AUTHOR_EMAIL]$(GIT_EMAIL)"
              echo "##vso[task.setvariable variable=GIT_COMMITTER_NAME]$(GIT_USERNAME)"
              echo "##vso[task.setvariable variable=GIT_COMMITTER_EMAIL]$(GIT_EMAIL)"
            displayName: Set all Git crendentials

          - task: NodeTool@0
            inputs:
              versionSpec: "12.x"
          - script:
              echo "##vso[task.setvariable variable=NODE_VERSION]$(node
              --version)"
            displayName: Define Node.js version

          - script: |
              echo "registry=$(NPM_CONFIG_REGISTRY)" > $(NPM_CONFIG_USERCONFIG)
              echo "always-auth=true" >> $(NPM_CONFIG_USERCONFIG)
            displayName: Configure npm for Azure Artifacts
          - task: npmAuthenticate@0
            inputs:
              workingFile: $(NPM_CONFIG_USERCONFIG)
            displayName: Authenticate npm for Azure Artifacts

          - task: Cache@2
            inputs:
              key: yarn | "$(Agent.OS)" | yarn.lock | "$(NODE_VERSION)"
              restoreKeys: |
                yarn | "$(Agent.OS)" | yarn.lock
                yarn | "$(Agent.OS)"
              path: node_modules
            displayName: Cache JavaScript dependencies
          - script: yarn install --frozen-lockfile --production=false
            displayName: Install JavaScript requirements

          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.7"
              addToPath: true
          - script:
              echo "##vso[task.setvariable variable=PYTHON_FULL_VERSION]$(python
              --version --version)"
            displayName: Define Python version

          - task: PipAuthenticate@1
            inputs:
              artifactFeeds: agos-labs
            displayName: Authenticate pip for Azure Artifacts

          - script: pip install -r build-requirements.txt
            displayName: Install build requirements

          - task: Cache@2
            inputs:
              key:
                pre-commit | "$(Agent.OS)" | .pre-commit-config.yaml |
                "$(PYTHON_FULL_VERSION)"
              restoreKeys: |
                pre-commit | "$(Agent.OS)" | .pre-commit-config.yaml
                pre-commit | "$(Agent.OS)"
                pre-commit
              path: $(PRE_COMMIT_HOME)
            displayName: Cache pre-commit hooks

          - script: npx --no-install semantic-release
            displayName: Release semantically
